name: Build UC2

on: 
  workflow_dispatch:
  watch:
    types: [started]
  push:
    tags:
    - 'v*'

env:
  CI: true

jobs:
  
  Macos:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.name }} - ${{ matrix.compiler }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { 
              os: macos-latest,
              arch: x64,
              python-arch: x64,
              python-ver: '3.8',
              name: 'macos-x64 cmake shared',
              shared: 'yes',
              artifact: 'macos-cmake-shared-x64.7z',
              build_type: 'Debug',
              archiver: '7za a',
              generators: 'Ninja'
            }
          - { 
              os: macos-latest,
              arch: x64,
              python-arch: x64,
              python-ver: '3.8',
              name: 'macos-x64 cmake static',
              shared: 'no',
              artifact: 'macos-cmake-static-x64.7z',
              build_type: 'Debug',
              archiver: '7za a',
              generators: 'Ninja'
            }
          - { 
              os: macos-11,
              arch: x86_64,
              python-arch: x86_64,
              python-ver: '3.8',
              name: 'android cmake',
              artifact: 'Android-x86_64.7z',
              build_type: 'Debug',
              archiver: '7za a',
              generators: 'Ninja'
            }
        compiler: [ gcc ]
    steps:
    - uses: actions/checkout@v2

    # - name: 'üõ†Ô∏è Python setup'
      # uses: actions/setup-python@v2
      # with:
        # python-version: ${{ matrix.config.python-ver }}

    - name: 'üöß Mac build'
      if: contains(matrix.config.name, 'macos-x64')
      shell: bash
      run: |
        brew install p7zip cmake ninja
        ninja --version
        cmake --version
        mkdir build
        mkdir instdir
        cmake \
          -S . \
          -B . \
          -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
          -G "${{ matrix.config.generators }}" \
          -DCMAKE_INSTALL_PREFIX:PATH=instdir \
          -DBUILD_SHARED_LIB= ${{ matrix.config.shared }}
        cmake --build . --config ${{ matrix.config.build_type }}
        cmake --install . --strip
        ctest -VV -C ${{ matrix.config.build_type }}

    - name: 'üöß Android x86_64 build'
      if: contains(matrix.config.name, 'android')
      shell: bash
      run: |
        brew install p7zip cmake ninja
        mkdir build
        mkdir instdir
        cmake . -DCMAKE_TOOLCHAIN_FILE="$ANDROID_HOME/ndk/21.4.7075529/build/cmake/android.toolchain.cmake" \
        	-DANDROID_PLATFORM=android-28 \
          -DANDROID_NDK="$ANDROID_HOME/ndk/21.4.7075529" \
          -DANDROID_ABI=${{ matrix.config.arch }} \
          -DOLP_SDK_ENABLE_TESTING=NO \
          -DOLP_SDK_BUILD_EXAMPLES=ON \
          -S . \
          -B . \
          -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
          -G "${{ matrix.config.generators }}" \
          -DCMAKE_INSTALL_PREFIX:PATH=instdir
        cmake --build . --config ${{ matrix.config.build_type }}
        cmake --install . --strip

    - name: 'üöß AVD Cache'
      if: contains(matrix.config.name, 'android')
      uses: actions/cache@v2
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd-28
    
    - name: 'üöß Create x86_64 tests environment'
      if: contains(matrix.config.name, 'android') && steps.avd-cache.outputs.cache-hit != 'true'
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 28
        arch: ${{ matrix.config.arch }}
        force-avd-creation: false
        disable-animations: false
        target: default
        profile: Nexus 6
        emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim -verbose -show-kernel
        script: echo "Generated AVD snapshot for caching."

    - name: 'üöß Android x86_64 tests'
      if: contains(matrix.config.name, 'android')
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 28
        force-avd-creation: false
        disable-animations: true
        arch: ${{ matrix.config.arch }}
        target: default
        profile: Nexus 6
        emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim -verbose -show-kernel
        script: bash ./adb.sh

    - name: 'üì¶ Pack artifact'
      if: always()
      shell: bash
      working-directory: instdir
      run: |
        ls -laR
        ${{ matrix.config.archiver }} ../${{ matrix.config.artifact }} . ../test*

    - name: 'üì§ Upload artifact'
      if: always()
      uses: actions/upload-artifact@v1
      with:
        path: ./${{ matrix.config.artifact }}
        name: ${{ matrix.config.artifact }}

    - name: Upload to release
      uses: ncipollo/release-action@v1
      with:
        name: R${{ env.DATE }}
        artifacts: ./${{ matrix.config.artifact }}
        allowUpdates: true
        tag: R${{ env.DATE }}
        token: ${{ secrets.GITHUB_TOKEN }}
